<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ControleOrcamento.Contexto.Domain</name>
    </assembly>
    <members>
        <member name="T:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioAutenticacao">
            <summary>
            Representa um usuário que quer se autenticar na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioAutenticacao.Login">
            <summary>
            Representa o usuário para autenticação na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioAutenticacao.Senha">
            <summary>
            Representa a senha do usuário para autenticação na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioAutenticacao.HashAutenticacao">
            <summary>
            Representa o hash usado para a criptografica da senha
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioAutenticacao.#ctor(ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase,ControleOrcamento.Contexto.Domain.ObjetosValor.Email,ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa,System.String,ControleOrcamento.Contexto.Domain.ObjetosValor.SenhaSecreta)">
            <summary>
            Cria usuário para efetuar login na aplicação
            </summary>
            <param name="usuarioCriacao">Usuário responsável pelo registro</param>
            <param name="email">E-mail do usuário da aplicação</param>
            <param name="nome">Nome do usuário da aplicação</param>
            <param name="login">Login do usuário para acessar a aplicação</param>
            <param name="senha">Senha do usuário para acessar a aplicação</param>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informado <paramref name="email"/></exception>
            <exception cref="T:System.ArgumentException">Lançado quando o <paramref name="email"/> informado náo é válido</exception>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informado <paramref name="nome"/></exception>
            <exception cref="T:System.ArgumentException">Lançado quando o <paramref name="nome"/> informado náo é válido</exception>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informado <paramref name="login"/></exception>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informada <paramref name="senha"/></exception>
            <exception cref="T:System.ArgumentException">Lançado quando a <paramref name="senha"/> informada náo é válida</exception>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioAutenticacao.#ctor">
            <summary>
            Construtor necessário para o ORM
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase">
            <summary>
            Representa um usuário registrado na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase.Nome">
            <summary>
            Representa o nome do usuário da aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase.Bloqueado">
            <summary>
            Quando verdadeiro, indica que o usuário esta bloqueado para acesso a aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase.Verificado">
            <summary>
            Quando verdadeiro, indica que o usuário já efetuou a verificação do login e esta apto para usar a aplicação
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase.#ctor(ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase,ControleOrcamento.Contexto.Domain.ObjetosValor.Email,ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa)">
            <summary>
            Cria um usuário candidato garantindo seu estado válido
            </summary>
            <param name="usuarioCriacao">Usuário responsável pelo registro</param>
            <param name="email">E-mail do usuário da aplicação</param>
            <param name="nome">Nome do usuário da aplicação</param>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informado <paramref name="email"/></exception>
            <exception cref="T:System.ArgumentException">Lançado quando o <paramref name="email"/> informado náo é válido</exception>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informado <paramref name="nome"/></exception>
            <exception cref="T:System.ArgumentException">Lançado quando o <paramref name="nome"/> informado náo é válido</exception>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase.#ctor">
            <summary>
            Construtor necessário para o ORM
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioCandidato">
            <summary>
            Representa as informações básicas de um usuário da aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioCandidato.Email">
            <summary>
            Representa o e-mail da conta do usuário da aplicaçãao
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioCandidato.#ctor(ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioBase,ControleOrcamento.Contexto.Domain.ObjetosValor.Email)">
            <summary>
            Cria um usuário candidato garantindo seu estado válido
            </summary>
            <param name="usuarioCriacao">Usuário responsável pelo registro</param>
            <param name="email"></param>
            <exception cref="T:System.ArgumentNullException">Lançado quando não for informado <paramref name="email"/></exception>
            <exception cref="T:System.ArgumentException">Lançado quando o <paramref name="email"/> informado náo é válido</exception>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.Contratos.Usuario.UsuarioCandidato.#ctor">
            <summary>
            Construtor necessário para o ORM
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase">
            <summary>
            Representa a definição de uma entidade
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.#ctor">
            <summary>
            Contrutor de uma entidade
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.Id">
            <summary>
            Representa o identificador do registro na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.DataCriacao">
            <summary>
            Representa a data de criação do registro na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.UsuarioCriacao">
            <summary>
            Representa o usuário que criou o registro na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.DataAlteracao">
            <summary>
            Representa a data de alteração do registro na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.UsuarioAlteracao">
            <summary>
            Representa o usuário que alterou o registro na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.DataExclusao">
            <summary>
            Representa a data de exclusão do registro na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.Entidade.EntidadeBase.UsuarioExclusao">
            <summary>
            Representa o usuário que excluiu o registro na aplicação
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.Enums.Frequencia">
            <summary>
            Determina a frequencia que será considerada
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Diária">
            <summary>
            Determina a frequencia diária
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Semanal">
            <summary>
            Determina a frequencia semanal
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Quinzenal">
            <summary>
            Determina a frequencia Quinzenal
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Mensal">
            <summary>
            Determina a frequencia Mensal
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Bimestral">
            <summary>
            Determina a frequencia Bimestral
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Semestral">
            <summary>
            Determina a frequencia Semestral
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Frequencia.Anual">
            <summary>
            Determina a frequencia Anual
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.Enums.Natureza">
            <summary>
            Determina as naturezas de lançamento possíveis na apliçao
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Natureza.Credito">
            <summary>
            Determina o lançamento como entrada de valor
            </summary>
        </member>
        <member name="F:ControleOrcamento.Contexto.Domain.Enums.Natureza.Debito">
            <summary>
            Determina o lançamento como saída de valor
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.ObjetosValor.Email">
            <summary>
            Representa um e-mail válido na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.ObjetosValor.Email.Endereco">
            <summary>
            Representa um endereço de e-mail válido
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.ObjetosValor.Email.#ctor(System.String)">
            <summary>
            Cria um endereço de e-mail válido
            </summary>
            <param name="endereco">Endereço de e-mail</param>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa">
            <summary>
            Representa um nome válido na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa.Nome">
            <summary>
            Representa o primeiro nome da pessoa
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa.SobreNome">
            <summary>
            Representa o sobrenome da pessoa
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa.#ctor(System.String,System.String)">
            <summary>
            Cria um nome válido para a aplicação
            </summary>
            <param name="nome">Primeiro nome da pessoa</param>
            <param name="sobrenome">Sobrenome da pessoa</param>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa.ToString">
            <summary>
            Concatena <see cref="P:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa.Nome"/> e <see cref="P:ControleOrcamento.Contexto.Domain.ObjetosValor.NomePessoa.SobreNome"/>
            </summary>
            <returns>Retorna o nome completo da pessoa</returns>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.ObjetosValor.ObjetoValor">
            <summary>
            Define propriedades simples que sofrerão validações do seu contaúdo
            </summary>
        </member>
        <member name="T:ControleOrcamento.Contexto.Domain.ObjetosValor.SenhaSecreta">
            <summary>
            Representa uma senha válida na aplicação
            </summary>
        </member>
        <member name="P:ControleOrcamento.Contexto.Domain.ObjetosValor.SenhaSecreta.Senha">
            <summary>
            Representa a senha válida
            </summary>
        </member>
        <member name="M:ControleOrcamento.Contexto.Domain.ObjetosValor.SenhaSecreta.#ctor(System.String)">
            <summary>
            Cria uma senha válida
            </summary>
            <param name="senha"></param>
        </member>
    </members>
</doc>
